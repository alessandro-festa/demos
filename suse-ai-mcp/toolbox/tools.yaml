sources:
  demo:
    kind: postgres
    host: postgres-postgresql.default.svc.cluster.local
    port: 5432
    database: northwind
    user: postgres
    password: postgres
tools:
  search-customers-by-shippers:
    kind: postgres-sql
    source: demo
    description: >-
      Search or list customer name and customer address of all customers with orders 
      that shipped using a specific delivery provider (i.e.Speedy Express).
    parameters:
      - name: company_name
        type: string
        description: The list of all customers name and customer address with orders using a shipping company
    statement: >-
      SELECT *
      FROM customers WHERE customer_id IN 
        (SELECT DISTINCT customer_id FROM orders WHERE orders.ship_via IN (SELECT shipper_id FROM shippers WHERE company_name = $1  ));
  tot-qnty-prod-less-than-num:
    kind: postgres-sql
    source: demo
    description: >- 
      Create a report that shows the total quantity of products (from the Order_Details table)
      ordered. Only show records for products for which the quantity ordered is fewer than 200 (5 rows)
    parameters:
      - name: quantity
        type: integer
        description: A report to show quantity of products with less than 200 units
    statement: >-
      SELECT o.product_id, p.product_name, SUM(o.quantity) AS TotalQuantity
        FROM order_details o
        JOIN products p ON p.product_id = o.product_id
        GROUP BY o.product_id, p.product_name
        HAVING SUM(o.quantity) < $1
        ORDER BY TotalQuantity DESC;
  tot-revenue-by-year:
    kind: postgres-sql
    source: demo
    description: >-
      What were our total revenues in  specific year (i.e.: for 1997 result must be 617.085,27)
    statement: >-
      SELECT SUM((order_details.unit_price)* order_details.quantity * (1.0-order_details.discount)) AS Total_Revenues
        FROM order_details
        INNER JOIN (SELECT order_id FROM orders WHERE date_part('year',orders.order_date) = '1997') AS Ord 
        ON Ord.order_id = order_details.order_id;
  top-10-selling-products:
    kind: postgres-sql
    source: demo
    description: >-
      Find the 10 top selling products (Hint: Top selling product is "Cote de Blaye")
    statement: >-
      SELECT Products.product_name, SUM(order_details.unit_price * order_details.quantity * (1.0- order_details.discount)) AS Sales
      FROM Products
      INNER JOIN order_details
      ON order_details.product_id = products.product_id
      GROUP BY Products.product_name
      ORDER BY Sales DESC;

toolsets:
  my-toolset:
    - search-customers-by-shippers
    - tot-qnty-prod-less-than-num
    - tot-revenue-by-year
    - top-10-selling-products
    # - search-hotels-by-location
    # - book-hotel
    # - update-hotel
    # - cancel-hotel