global:
  imagePullSecrets:
  - application-collection

specs:
  image:
    registry: dp.apps.rancher.io
    repository: containers/ollama
    tag: 0.6.2
    pullPolicy: IfNotPresent

ingress:
  enabled: false
service:
  nodePort: 31434
  type: NodePort
persistentVolume:
  storageClass: local-path

ollama: 
  # -- List of models to pull at container startup
  models:
    # pull:
    #   - gemma3:1b-it-qat
    # create:
    #   - name: suseai-k8s
    #     template: |
    #       FROM gemma3:1b-it-qat
    #       # sets the temperature to 1 [higher is more creative, lower is more coherent]
    #       PARAMETER temperature 1
    #       # sets the context window size to 4096, this controls how many tokens the LLM can use as context to generate the next token
    #       PARAMETER num_ctx 4096

    #       # sets a custom system message to specify the behavior of the chat assistant
    #       SYSTEM """ You are an advanced RBAC assistant for Rancher and Kubernetes environments. 
    #       Your role is to provide tailored recommendations for RBAC configurations, cluster access, 
    #       and observability settings based on the following context and inputs. """

    #       MESSAGE user Is there any pod in a non healthy status?
    #       MESSAGE assistant yes, here's a list of pods in each namespace that are not in healthy status
    #       MESSAGE user Can you list namespaces I have in my cluster?
    #       MESSAGE assistant yes, here it is the list of namespaces
    # run: 
    #   - suseai-k8s
    pull:
      - qwen2.5:0.5b-instruct
    create:
      - name: suse-k8s-bot
        template: | 
          """{{- range $index, $_ := .Messages }}
          {{- if eq .Role "system" }}[SYSTEM_PROMPT]{{ .Content }}[/SYSTEM_PROMPT]
          {{- else if eq .Role "user" }}
          {{- if and (le (len (slice $.Messages $index)) 2) $.Tools }}[AVAILABLE_TOOLS]{{ $.Tools }}[/AVAILABLE_TOOLS]
          {{- end }}[INST]{{ .Content }}[/INST]
          {{- else if eq .Role "assistant" }}
          {{- if .Content }}{{ .Content }}
          {{- if not (eq (len (slice $.Messages $index)) 1) }}</s>
          {{- end }}
          {{- else if .ToolCalls }}[TOOL_CALLS][
          {{- range .ToolCalls }}{"name": "{{ .Function.Name }}", "arguments": {{ .Function.Arguments }}}
          {{- end }}]</s>
          {{- end }}
          {{- else if eq .Role "tool" }}[TOOL_RESULTS]{"content": {{ .Content }}}[/TOOL_RESULTS]
          {{- end }}
          {{- end }}"""



   
